1
SELECT AVG(price) as 'Average_Price'
FROM Price_History
WHERE ProductName = 'iPhone XS'
AND (eDate BETWEEN '2020-08-01' AND '2020-08-31')
OR (sDate BETWEEN '2020-08-01' AND '2020-08-31')
OR (sDate <= '2020-08-31' AND eDate is null)

--------------------------------------------------------------
2
SELECT ProductName, AVG(Rating) as 'Average Rating'
FROM Feedback as F1
WHERE F1.ProductName IN (SELECT F2.ProductName
							FROM Feedback as F2
							WHERE F2.Rating = 5
							AND F2.Date_time BETWEEN '2020-08-01 00:00:00' AND '2020-08-31 23:59:59'
							GROUP BY F2.ProductName
							HAVING COUNT(F2.Rating) >= 100)

GROUP BY F1.ProductName
ORDER BY [Average Rating] DESC;

---------------------------------------------------------------------
3
SELECT Products_in_Orders.ProductName, AVG(DATEDIFF(day, Orders.Date_time, Products_in_Orders.Delivery_date)) as 'Avg Delivery Time'
FROM Products_in_Orders, Orders
WHERE Products_in_Orders.OrderID = Orders.OrderID
AND Orders.Date_time >= '2020-06-01 00:00:00'
AND Products_in_Orders.DeliveryStatus = 'delivered'
GROUP BY Products_in_Orders.ProductName;

------------------------------------------------------------------------
4
SELECT C.EmployeeID, AVG(DATEDIFF(MINUTE, C.Filled_date_time, C.Handled_date_time)) as 'Average_Latency'
INTO C2
FROM Complaint as C
GROUP BY C.EmployeeID

SELECT E.EmployeeName, C2.Average_Latency
FROM C2 as C2, Employee as E
WHERE C2.Average_Latency IN(SELECT MIN(Average_Latency) FROM C2)
AND E.EmployeeID = C2.EmployeeID
DROP TABLE C2;

---------------------------------------------------------------------------
5
SELECT P.ProductName 
INTO S1
FROM Products as P
WHERE P.Maker = 'Samsung';

SELECT PS.ProductName, COUNT(PS.ShopName) as NumOfShops
FROM Products_in_Shops as PS
WHERE PS.ProductName IN (SELECT * 
							FROM S1)
GROUP BY PS.ProductName
DROP TABLE S1;

------------------------------------------------------------------------------
6
SELECT PO.ShopName, SUM(PO.Price * PO.Quantity) as Rev
INTO RevTable
FROM Products_in_Orders as PO, Orders as O
WHERE Date_time BETWEEN '2020-08-01' AND '2020-08-31'
GROUP BY PO.ShopName;

SELECT ShopName, Rev
FROM RevTable
WHERE Rev IN (SELECT MAX(Rev)
				FROM RevTable)
DROP TABLE RevTable

--------------------------------------------------------------------------------
7
SELECT UserID, COUNT(UserID) as 'Num_Complaints'
INTO User_Complaints
FROM Complaint
GROUP BY UserID;

SELECT O.UserID, PO.OrderID, ProductName, Price
INTO Users_Bought
FROM Orders as O, Products_in_Orders as PO
WHERE O.OrderID = PO.OrderID
AND PO.OrderID IN (SELECT OrderID
			      FROM Orders O
                  WHERE O.UserID IN (SELECT UserID
				                     FROM User_Complaints as UC
                                     WHERE UC.Num_Complaints IN (SELECT MAX(Num_Complaints)
                                                                 FROM User_Complaints)));

SELECT UserID, MAX(Price) as Price
INTO Most_Ex
FROM Users_Bought
GROUP BY UserID;

SELECT Users_Bought.UserID, Users_Bought.ProductName, Users_Bought.Price
FROM Users_Bought, Most_Ex
WHERE Most_Ex.UserID = Users_Bought.UserID
AND  Most_Ex.Price = Users_Bought.Price;

DROP TABLE User_Complaints;
DROP TABLE Users_Bought;
DROP TABLE Most_Ex;

----------------------------------------------------------------------------------------
8
SELECT TOP 5 PO.ProductName, COUNT(PO.ProductName) as "Num_Purchases"
FROM Products_in_Orders PO, Orders ON
WHERE PO.OrderID = O.ID AND O.Datetime BETWEEN '2020-08-01 00:00:00' AND '2020-08-31 23:59:59'
						AND O.UserID = SOME (SELECT ID
												FROM Users)
GROUP BY PO.ProductName
ORDER BY "Num_Purchases" DESC;

-------------------------------------------------------------------------------------
9
SELECT PO.ProductName, DATEADD(MONTH, DATEDIFF(MONTH, 0, O.Date_time), 0) as 'Year_Month', SUM(Quantity) as 'Total_Sold'
INTO Monthly_Sold
FROM Orders as O 
JOIN Products_in_Orders as PO ON O.OrderID = PO.OrderID
GROUP BY DATEADD(MONTH, DATEDIFF(MONTH, 0, O.Date_time), 0), PO.ProductName;

SELECT Monthly_Sold.ProductName, FORMAT(Year_Month, 'yyyy-MM') as 'Increasing_3_Month'
FROM Monthly_Sold
WHERE Monthly_Sold.ProductName IN (SELECT MS2.ProductName
                            FROM Monthly_Sold as MS2
							WHERE Monthly_Sold.ProductName = MS2.ProductName
							AND DATEDIFF(MONTH, Monthly_Sold.Year_Month, MS2.Year_Month) = 1
							AND Monthly_Sold.Year_Month < MS2.Year_Month
							AND Monthly_Sold.Total_Sold < MS2.Total_Sold
							AND MS2.ProductName IN (SELECT MS3.ProductName
									   		          FROM Monthly_Sold as MS3
							                          WHERE MS2.ProductName = MS3.ProductName
													  AND DATEDIFF(MONTH, MS2.Year_Month, MS3.Year_Month) = 1
													  AND MS2.Year_Month < MS3.Year_Month
													  AND MS2.Total_Sold < MS3.Total_Sold))
DROP TABLE Monthly_Sold;

